{"version":3,"sources":["jsx/pages/reset-password.jsx"],"names":["connect","state","msg","dashboard_state","error","user","dispatch","verifyUrl","url","saveNewPassword","option","useEffect","num_of_refresh","JSON","parse","localStorage","getItem","setItem","stringify","setTimeout","window","location","reload","form_ref","useRef","save_button_ref","queryUrl","search","current","textContent","disabled","className","class","role","ref","onSubmit","e","preventDefault","password_options","newPassword","password","value","confirmPassword","confirm_password","_id","required","type","name","placeholder"],"mappings":"mGAAA,yCAmHeA,uBAfS,SAAAC,GACpB,MAAO,CACHC,IAAKD,EAAME,gBAAgBD,IAC3BE,MAAOH,EAAME,gBAAgBC,MAC7BC,KAAMJ,EAAME,gBAAgBE,SAIT,SAAAC,GACvB,MAAO,CACHC,UAAW,SAACC,GAAD,OAASF,EAASC,YAAUC,KACvCC,gBAAiB,SAACC,GAAD,OAAYJ,EAASG,YAAgBC,QAI/CV,EA7Gf,YAA0E,IAAjDO,EAAgD,EAAhDA,UAAWE,EAAqC,EAArCA,gBAAiBP,EAAoB,EAApBA,IAAKE,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAO7DM,qBAAU,WAEN,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,mBAGvDD,aAAaE,QAAQ,iBAAkBJ,KAAKK,WAAWN,GAAiB,GAAK,EAAIA,GAAkB,IAEnGO,YAAW,WACHP,GAAkB,GAClBQ,OAAOC,SAASC,WAErB,OACJ,IAEH,IAAMC,EAAWC,iBAAO,MAClBC,EAAkBD,iBAAO,MAgC/B,OA9BAb,qBAAU,WAEN,IAAMe,EAAWN,OAAOC,SAASM,OAEjCpB,EAAUmB,KACX,CAACnB,IAkBJI,qBAAU,WACFP,IACAqB,EAAgBG,QAAQC,YAAc,gBACtCJ,EAAgBG,QAAQE,UAAW,KAExC,CAAC5B,EAAKE,IAGL,mCACI,qBAAK2B,UAAU,+BAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,sDAAf,SACI,qBAAKA,UAAU,oBAAf,SAII,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,qCAAf,SACI,oBAAIA,UAAU,aAAd,8BAEJ,sBAAKA,UAAU,YAAf,UACM7B,GAAO,qBAAK8B,MAAM,sBAAsBC,KAAK,QAAtC,SACH/B,IAEN,uBAAMgC,IAAKX,EAAUY,SAxChB,SAACC,GAClCA,EAAEC,iBACFZ,EAAgBG,QAAQC,YAAc,YACtCJ,EAAgBG,QAAQE,UAAW,EACnC,IAGMQ,EAAmB,CACrBC,YAJgBhB,EAASK,QAAQY,SAASC,MAK1CC,gBAJoBnB,EAASK,QAAQe,iBAAiBF,MAKtDG,IAAKvC,EAAKuC,KAGdnC,EAAgB6B,IA2BY,UACI,sBAAKP,UAAU,aAAf,UACI,iDACA,uBAAOc,UAAQ,EAACC,KAAK,WAAWf,UAAU,eAAegB,KAAK,WAAWC,YAAY,0BAEzF,sBAAKjB,UAAU,aAAf,UACI,qDACA,uBAAOc,UAAQ,EAACC,KAAK,WAAWf,UAAU,eAAegB,KAAK,mBAAmBC,YAAY,gCAEjG,qBAAKjB,UAAU,cAAf,SACI,wBAAQG,IAAKT,EAAiBqB,KAAK,SAASf,UAAU,4BAAtD","file":"static/js/15.9b9ba071.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { verifyUrl, saveNewPassword } from '../../redux/app_state/actions'\r\n\r\n\r\nfunction ResetPassword({ verifyUrl, saveNewPassword, msg, error, user }) {\r\n\r\n    // Purpose of this func\r\n    // After Code-Spliting the bundled files\r\n    // The App does not load the single page completely.\r\n    // SOLUTION:\r\n    // 1. Reload page after the first complete DOM load-up\r\n    useEffect(() => {\r\n        // Get The Refresh Count First!\r\n        const num_of_refresh = JSON.parse(localStorage.getItem('num_of_refresh'))\r\n\r\n         // On Component Mount Persist The Refresh Count onCondition Second\r\n        localStorage.setItem('num_of_refresh', JSON.stringify((num_of_refresh >=2 ? -1 : num_of_refresh) + 1))\r\n\r\n        setTimeout(() => {\r\n            if (num_of_refresh <= 1) {\r\n                window.location.reload()\r\n            }\r\n        }, 500)\r\n    }, [])\r\n\r\n    const form_ref = useRef(null)\r\n    const save_button_ref = useRef(null)\r\n    \r\n    useEffect(() => {\r\n        // Grab the query param from the window URL\r\n        const queryUrl = window.location.search\r\n\r\n        verifyUrl(queryUrl)\r\n    }, [verifyUrl])\r\n\r\n    const handle_reset_password_submit = (e) => {\r\n        e.preventDefault()\r\n        save_button_ref.current.textContent = \"Saving...\"\r\n        save_button_ref.current.disabled = true\r\n        const newPassword = form_ref.current.password.value\r\n        const confirmPassword = form_ref.current.confirm_password.value\r\n        \r\n        const password_options = {\r\n            newPassword,\r\n            confirmPassword,\r\n            _id: user._id\r\n        }\r\n        \r\n        saveNewPassword(password_options)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            save_button_ref.current.textContent = \"Save password\"\r\n            save_button_ref.current.disabled = false\r\n        }\r\n    }, [msg, error])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"authincation section-padding\">\r\n                <div className=\"container h-100\">\r\n                    <div className=\"row justify-content-center h-100 align-items-center\">\r\n                        <div className=\"col-xl-5 col-md-6\">\r\n                            {/* <div className=\"mini-logo text-center my-5\">\r\n                                <Link to={'./'}><img src={require('./../../images/logo.png')} alt=\"\" /></Link>\r\n                            </div> */}\r\n                            <div className=\"auth-form card\">\r\n                                <div className=\"card-header justify-content-center\">\r\n                                    <h4 className=\"card-title\">Password Reset</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    { msg && <div class=\"alert alert-success\" role=\"alert\">\r\n                                        { msg }\r\n                                    </div> }\r\n                                    <form ref={form_ref} onSubmit={handle_reset_password_submit}>\r\n                                        <div className=\"form-group\">\r\n                                            <label>New Password</label>\r\n                                            <input required type=\"password\" className=\"form-control\" name=\"password\" placeholder=\"enter new password\" />\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Confirm Password</label>\r\n                                            <input required type=\"password\" className=\"form-control\" name=\"confirm_password\" placeholder=\"please re-enter password\" />\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <button ref={save_button_ref} type=\"submit\" className=\"btn btn-success btn-block\">Save password</button>\r\n                                        </div>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        msg: state.dashboard_state.msg,\r\n        error: state.dashboard_state.error,\r\n        user: state.dashboard_state.user,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        verifyUrl: (url) => dispatch(verifyUrl(url)),\r\n        saveNewPassword: (option) => dispatch(saveNewPassword(option))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ResetPassword);"],"sourceRoot":""}