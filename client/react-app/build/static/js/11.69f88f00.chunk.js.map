{"version":3,"sources":["../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","jsx/pages/dashboard.jsx"],"names":["className","React","forwardRef","p","ref","createElement","_extends","classNames","_excluded","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","connect","state","compOwnProp","user","dashboard_state","cryptoPrice","dispatch","fetchUser","useEffect","num_of_refresh","JSON","parse","localStorage","getItem","setItem","stringify","setTimeout","window","location","reload","totalDeposits","deposit","reduce","acc","elem","totalPayouts","payouts","renderText","wallet","decimalScale","fixedDecimalScale","thousandSeparator","displayType","to","style","fontSize","referral","bonus","hostname","_id","btc","price","Math","round","volume","eth","ltc","bch"],"mappings":"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","file":"static/js/11.69f88f00.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React, { useEffect } from 'react';\r\nimport Header2 from '../layout/header2';\r\nimport Sidebar from '../layout/sidebar';\r\nimport PageTitle from '../element/page-title';\r\nimport Footer2 from '../layout/footer2';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { fetchUser } from '../../redux/app_state/actions'\r\n// Currency Module\r\nimport CurrencyFormat from 'react-currency-format'\r\nimport { Card } from 'react-bootstrap'\r\n\r\n\r\n\r\nfunction Dashboard({ user, cryptoPrice, fetchUser }) {\r\n\r\n    // Purpose of this func\r\n    // After Code-Spliting the bundled files\r\n    // The App does not load the single page completely.\r\n    // SOLUTION:\r\n    // 1. Reload page after the first complete DOM load-up\r\n    useEffect(() => {\r\n        // Get The Refresh Count First!\r\n        const num_of_refresh = JSON.parse(localStorage.getItem('num_of_refresh'))\r\n\r\n         // On Component Mount Persist The Refresh Count onCondition Second\r\n        localStorage.setItem('num_of_refresh', JSON.stringify((num_of_refresh >=2 ? -1 : num_of_refresh) + 1))\r\n\r\n        setTimeout(() => {\r\n            if (num_of_refresh <= 1) {\r\n                window.location.reload()\r\n            }\r\n        }, 500)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n\r\n        if (user === null) {\r\n            fetchUser();\r\n        }\r\n\r\n        // Note: check useCallback!\r\n    }, [user, fetchUser])\r\n\r\n\r\n    // Sum Deposits\r\n    const totalDeposits =\r\n      user &&\r\n      user.deposit.reduce((acc, elem) => {\r\n      return acc + elem;\r\n    }, 0);\r\n\r\n    // Sum Payouts\r\n    const totalPayouts =\r\n      user &&\r\n      user.payouts.reduce((acc, elem) => {\r\n      return acc + elem;\r\n    }, 0);\r\n\r\n    return (\r\n        <>\r\n            <Header2 />\r\n            <Sidebar />\r\n            <PageTitle />\r\n\r\n            <div className=\"content-body\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-xl-3 col-lg-4 col-xxl-4\">\r\n                            <div className=\"card balance-widget\">\r\n                                <div className=\"card-header border-0 py-0\">\r\n                                    {/* <h4 className=\"card-title\">Your Portfolio </h4> */}\r\n                                </div>\r\n                                <div className=\"card-body pt-0\">\r\n                                    <div className=\"balance-widget\">\r\n                                        <Card\r\n                                          bg=\"primary\"\r\n                                          text=\"white\">\r\n                                            <Card.Header>Wallet Balance</Card.Header>\r\n                                            <Card.Title className=\"py-2\">\r\n                                                <CurrencyFormat\r\n                                                    renderText={(value) => (\r\n                                                        <>\r\n                                                        <p className=\"text-white p-4\">\r\n                                                            <strong>{value}</strong>\r\n                                                        </p>\r\n                                                        </>\r\n                                                    )}\r\n                                                    value={user ? user.wallet : 0}\r\n                                                    decimalScale={2}\r\n                                                    fixedDecimalScale={true}\r\n                                                    thousandSeparator={true}\r\n                                                    displayType={\"text\"}\r\n                                                    prefix={\"$\"}\r\n                                                />\r\n                                                <br />\r\n                                                <Card.Text>\r\n                                                    <Link to=\"/buy-sell\" style={{fontSize: '14px'}} className=\"pl-4  text-secondary text-info\">Fund wallet</Link>\r\n                                                </Card.Text>\r\n                                            </Card.Title>\r\n                                        </Card>\r\n                                <div className=\"card\">\r\n                                    <div className=\"card-header border-0 py-0\">\r\n                                        {/* <h4 className=\"card-title\">Account Overview</h4> */}\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-xl-12 col-lg-12 col-xxl-12\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                                <span><i className=\"fas fa-money-check-alt\"></i></span>\r\n                                                                <h5 className=\"d-inline-block ml-2 mb-3\">All-time Deposit <span>($)</span>\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>\r\n                                                                <CurrencyFormat\r\n                                                                    renderText={(value) => (\r\n                                                                    <>\r\n                                                                        <p>\r\n                                                                        <strong>{value}</strong>\r\n                                                                        </p>\r\n                                                                    </>\r\n                                                                    )}\r\n                                                                    value={user ? totalDeposits : 0}\r\n                                                                    decimalScale={2}\r\n                                                                    fixedDecimalScale={true}\r\n                                                                    thousandSeparator={true}\r\n                                                                    displayType={\"text\"}\r\n                                                                    prefix={\"$\"}\r\n                                                                />\r\n                                                                {totalDeposits > 2000 && (<span className=\"badge badge-success ml-2\">+ 0.2%</span>)}\r\n                                                            </h4>\r\n                                                        </div>\r\n                                                        {/* <BtcChart /> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-12 col-lg-12 col-xxl-12\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                                <span><i className=\"fas fa-piggy-bank\"></i></span>\r\n                                                                <h5 className=\"d-inline-block ml-2 mb-3\">All-time Payouts <span>($)</span>\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>\r\n                                                                <CurrencyFormat\r\n                                                                    renderText={(value) => (\r\n                                                                    <>\r\n                                                                        <p>\r\n                                                                        <strong>{value}</strong>\r\n                                                                        </p>\r\n                                                                    </>\r\n                                                                    )}\r\n                                                                    value={user ? totalPayouts : 0}\r\n                                                                    decimalScale={2}\r\n                                                                    fixedDecimalScale={true}\r\n                                                                    thousandSeparator={true}\r\n                                                                    displayType={\"text\"}\r\n                                                                    prefix={\"$\"}\r\n                                                                />\r\n                                                                {totalPayouts > 500 && (<span className=\"badge badge-success ml-2\">+ 0.6%</span>)}\r\n                                                            </h4>\r\n                                                        </div>\r\n                                                        {/* <EthChart /> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-12 col-lg-12 col-xxl-12\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                                <span><i className=\"fas fa-users\"></i></span>\r\n                                                                <h5 className=\"d-inline-block ml-2 mb-3\">Referrals <span>(accounts)</span>\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>{ user?.referral }</h4>\r\n                                                        </div>\r\n                                                        {/* <LtcChart /> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-xl-12 col-lg-12 col-xxl-12\">\r\n                                                <div className=\"widget-card\">\r\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                        <div className=\"widget-stat\">\r\n                                                            <div className=\"coin-title\">\r\n                                                                <span><i className=\"fas fa-money-bill-wave-alt\"></i></span>\r\n                                                                <h5 className=\"d-inline-block ml-2 mb-3\">Bonus <span>($)</span>\r\n                                                                </h5>\r\n                                                            </div>\r\n                                                            <h4>\r\n                                                                <CurrencyFormat\r\n                                                                    renderText={(value) => (\r\n                                                                    <>\r\n                                                                        <p>\r\n                                                                        <strong>{value}</strong>\r\n                                                                        </p>\r\n                                                                    </>\r\n                                                                    )}\r\n                                                                    value={user?.bonus}\r\n                                                                    decimalScale={2}\r\n                                                                    fixedDecimalScale={true}\r\n                                                                    thousandSeparator={true}\r\n                                                                    displayType={\"text\"}\r\n                                                                    prefix={\"$\"}\r\n                                                                />\r\n                                                                {user?.bonus > 500 && (<span className=\"badge badge-success ml-2\">+ 0.6%</span>)}\r\n                                                            </h4>\r\n                                                        </div>\r\n                                                        {/* <XrpChart /> */}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                            </div>\r\n                        {/* --- Referral Link --- */}\r\n                        <span className=\"p-2\">\r\n                            <strong>Referral Link:</strong><br />\r\n                        </span>\r\n                        <p className=\"p-2\" style={{fontSize: \"10px\"}}>\r\n                            \r\n                            { `${window.location.hostname}/signup?ref=${user?._id}` }\r\n                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-xl-3 col-lg-12 col-xxl-12\">\r\n                        <ul className=\"list-unstyled\">\r\n                            <li className=\"media\">\r\n                                <i className=\"cc BTC mr-3\"></i>\r\n                                <div className=\"media-body\">\r\n                                    <h5 className=\"m-0\">Bitcoin</h5>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <h5>\r\n                                        <CurrencyFormat\r\n                                            renderText={(value) => (\r\n                                            <>\r\n                                                <p>\r\n                                                <strong>{value}</strong>\r\n                                                </p>\r\n                                            </>\r\n                                            )}\r\n                                            value={cryptoPrice?.btc.price}\r\n                                            decimalScale={2}\r\n                                            fixedDecimalScale={true}\r\n                                            thousandSeparator={true}\r\n                                            displayType={\"text\"}\r\n                                            prefix={\"$\"}\r\n                                        />\r\n                                    </h5>\r\n                                    <span>{Math.round(cryptoPrice?.btc.volume)} (Volume)</span>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"media\">\r\n                                    <i className=\"cc ETH mr-3\"></i>\r\n                                    <div className=\"media-body\">\r\n                                        <h5 className=\"m-0\">Ethereum</h5>\r\n                                    </div>\r\n                                    <div className=\"text-right\">\r\n                                    <h5>\r\n                                        <CurrencyFormat\r\n                                            renderText={(value) => (\r\n                                            <>\r\n                                                <p>\r\n                                                <strong>{value}</strong>\r\n                                                </p>\r\n                                            </>\r\n                                            )}\r\n                                            value={cryptoPrice?.eth.price}\r\n                                            decimalScale={2}\r\n                                            fixedDecimalScale={true}\r\n                                            thousandSeparator={true}\r\n                                            displayType={\"text\"}\r\n                                            prefix={\"$\"}\r\n                                        />\r\n                                        </h5>\r\n                                        <span>{Math.round(cryptoPrice?.eth.volume)} (Volume)</span>\r\n                                </div>\r\n                            </li>\r\n                            <li className=\"media\">\r\n                                <i className=\"cc LTC mr-3\"></i>\r\n                                <div className=\"media-body\">\r\n                                    <h5 className=\"m-0\">Litecoin</h5>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <h5>\r\n                                        <CurrencyFormat\r\n                                            renderText={(value) => (\r\n                                            <>\r\n                                                <p>\r\n                                                <strong>{value}</strong>\r\n                                                </p>\r\n                                            </>\r\n                                            )}\r\n                                            value={cryptoPrice?.ltc.price}\r\n                                            decimalScale={2}\r\n                                            fixedDecimalScale={true}\r\n                                            thousandSeparator={true}\r\n                                            displayType={\"text\"}\r\n                                            prefix={\"$\"}\r\n                                        />\r\n                                    </h5>\r\n                                    <span>{Math.round(cryptoPrice?.ltc.volume)} (Volume)</span>\r\n                                </div>\r\n                            </li>\r\n\r\n                            <li className=\"media\">\r\n                                <i className=\"cc BCH mr-3\"></i>\r\n                                <div className=\"media-body\">\r\n                                    <h5 className=\"m-0\">Bitcoin Cash</h5>\r\n                                </div>\r\n                                <div className=\"text-right\">\r\n                                    <h5>\r\n                                        <CurrencyFormat\r\n                                            renderText={(value) => (\r\n                                            <>\r\n                                                <p>\r\n                                                <strong>{value}</strong>\r\n                                                </p>\r\n                                            </>\r\n                                            )}\r\n                                            value={cryptoPrice?.bch.price}\r\n                                            decimalScale={2}\r\n                                            fixedDecimalScale={true}\r\n                                            thousandSeparator={true}\r\n                                            displayType={\"text\"}\r\n                                            prefix={\"$\"}\r\n                                        />\r\n                                    </h5>\r\n                                    <span>{Math.round(cryptoPrice?.bch.volume)} (Volume)</span>\r\n                                </div>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <Footer2 />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state, compOwnProp) => {\r\n    return {\r\n        user: state.dashboard_state.user,\r\n        cryptoPrice: state.dashboard_state.cryptoPrice\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, compOwnProp) => {\r\n    return {\r\n        fetchUser: () => dispatch(fetchUser()),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);"],"sourceRoot":""}