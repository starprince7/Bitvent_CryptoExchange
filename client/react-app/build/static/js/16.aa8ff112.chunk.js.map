{"version":3,"sources":["jsx/pages/reset.jsx"],"names":["connect","state","msg","dashboard_state","error","dispatch","recoverPassword","email","useEffect","num_of_refresh","JSON","parse","localStorage","getItem","setItem","stringify","setTimeout","window","location","reload","form_ref","useRef","recover_btn_ref","current","textContent","disabled","className","class","role","ref","onSubmit","e","preventDefault","value","required","type","name","placeholder","style","fontSize"],"mappings":"mGAAA,yCAoGeA,uBAbS,SAAAC,GACpB,MAAO,CACHC,IAAKD,EAAME,gBAAgBD,IAC3BE,MAAOH,EAAME,gBAAgBC,UAIV,SAAAC,GACvB,MAAO,CACHC,gBAAiB,SAACC,GAAD,OAAWF,EAASC,YAAgBC,QAI9CP,EA9Ff,YAAiD,IAAhCM,EAA+B,EAA/BA,gBAAiBJ,EAAc,EAAdA,IAAKE,EAAS,EAATA,MAOnCI,qBAAU,WAEN,IAAMC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,mBAGvDD,aAAaE,QAAQ,iBAAkBJ,KAAKK,WAAWN,GAAiB,GAAK,EAAIA,GAAkB,IAEnGO,YAAW,WACHP,GAAkB,GAClBQ,OAAOC,SAASC,WAErB,OACJ,IAEH,IAAMC,EAAWC,iBAAO,MAClBC,EAAkBD,iBAAO,MAkB/B,OAPAb,qBAAU,YACFN,GAAOE,KACPkB,EAAgBC,QAAQC,YAAc,UACtCF,EAAgBC,QAAQE,UAAW,KAExC,CAACvB,EAAKE,IAGL,mCACI,qBAAKsB,UAAU,+BAAf,SACI,qBAAKA,UAAU,kBAAf,SACI,qBAAKA,UAAU,sDAAf,SACI,qBAAKA,UAAU,oBAAf,SAII,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,qCAAf,SACI,oBAAIA,UAAU,aAAd,+BAEJ,sBAAKA,UAAU,YAAf,UACMxB,GAAO,qBAAKyB,MAAM,sBAAsBC,KAAK,QAAtC,SACH1B,IAEN,uBAAM2B,IAAKT,EAAUU,SAjCf,SAACC,GACnCA,EAAEC,iBACFV,EAAgBC,QAAQC,YAAc,gBACtCF,EAAgBC,QAAQE,UAAW,EACnC,IAAMlB,EAAQa,EAASG,QAAQhB,MAAM0B,MAErC3B,EAAgBC,IA2BY,UACI,sBAAKmB,UAAU,aAAf,UACI,0CACA,uBAAOQ,UAAQ,EAACC,KAAK,QAAQT,UAAU,eAAeU,KAAK,QAAQC,YAAY,gCAEnF,qBAAKX,UAAU,cAAf,SACI,wBAAQG,IAAKP,EAAiBa,KAAK,SAAST,UAAU,iCAAtD,kCAGR,mBAAGY,MAAO,CAACC,SAAU,QAArB","file":"static/js/16.aa8ff112.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { recoverPassword } from '../../redux/app_state/actions'\r\n\r\n\r\nfunction Reset({ recoverPassword, msg, error }) {\r\n\r\n    // Purpose of this func\r\n    // After Code-Spliting the bundled files\r\n    // The App does not load the single page completely.\r\n    // SOLUTION:\r\n    // 1. Reload page after the first complete DOM load-up\r\n    useEffect(() => {\r\n        // Get The Refresh Count First!\r\n        const num_of_refresh = JSON.parse(localStorage.getItem('num_of_refresh'))\r\n\r\n         // On Component Mount Persist The Refresh Count onCondition Second\r\n        localStorage.setItem('num_of_refresh', JSON.stringify((num_of_refresh >=2 ? -1 : num_of_refresh) + 1))\r\n\r\n        setTimeout(() => {\r\n            if (num_of_refresh <= 1) {\r\n                window.location.reload()\r\n            }\r\n        }, 500)\r\n    }, [])\r\n\r\n    const form_ref = useRef(null)\r\n    const recover_btn_ref = useRef(null)\r\n\r\n    const handle_forgot_password_submit = (e) => {\r\n        e.preventDefault()\r\n        recover_btn_ref.current.textContent = \"Recovering...\"\r\n        recover_btn_ref.current.disabled = true\r\n        const email = form_ref.current.email.value\r\n        \r\n        recoverPassword(email)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (msg || error) {\r\n            recover_btn_ref.current.textContent = \"Recover\"\r\n            recover_btn_ref.current.disabled = false\r\n        }\r\n    }, [msg, error])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"authincation section-padding\">\r\n                <div className=\"container h-100\">\r\n                    <div className=\"row justify-content-center h-100 align-items-center\">\r\n                        <div className=\"col-xl-5 col-md-6\">\r\n                            {/* <div className=\"mini-logo text-center my-5\">\r\n                                <Link to={'./'}><img src={require('./../../images/logo.png')} alt=\"\" /></Link>\r\n                            </div> */}\r\n                            <div className=\"auth-form card\">\r\n                                <div className=\"card-header justify-content-center\">\r\n                                    <h4 className=\"card-title\">Forgot Password</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    { msg && <div class=\"alert alert-success\" role=\"alert\">\r\n                                        { msg }\r\n                                    </div> }\r\n                                    <form ref={form_ref} onSubmit={handle_forgot_password_submit}>\r\n                                        <div className=\"form-group\">\r\n                                            <label>Email</label>\r\n                                            <input required type=\"email\" className=\"form-control\" name=\"email\" placeholder=\"enter your email address\" />\r\n                                        </div>\r\n                                        <div className=\"text-center\">\r\n                                            <button ref={recover_btn_ref} type=\"submit\" className=\"btn btn-success btn-block mb-2\">Recover-account</button>\r\n                                        </div>\r\n                                    </form>\r\n                                    <p style={{fontSize: \"13px\"}}>Re-gain access to your account, follow the prompt!</p>\r\n                                    {/* <div className=\"new-account mt-3\">\r\n                                        <p className=\"mb-1\">Don't Received? </p>\r\n                                        <Link className=\"text-primary\" to={'./reset'}>Resend </Link>\r\n                                    </div> */}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        msg: state.dashboard_state.msg,\r\n        error: state.dashboard_state.error\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        recoverPassword: (email) => dispatch(recoverPassword(email))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Reset);"],"sourceRoot":""}