{"version":3,"sources":["jsx/element/popup.jsx","jsx/pages/buy-sell.jsx"],"names":["Popup","state","isOpen","openModal","bind","this","setState","className","onClick","channel","videoId","ratio","autoplay","onClose","Component","connect","error","dashboard_state","user","dispatch","checkAmount","amount","plan","setInvoice","options","setError","e","cryptoTypeRef","useRef","cryptoAddressRef","inputRef","buttonRef","history","useHistory","useState","errorInComponent","setInComponentError","useEffect","num_of_refresh","JSON","parse","localStorage","getItem","setItem","stringify","setTimeout","window","location","reload","paynow_btn","document","querySelector","disabled","callCheckAmount","form","deposit_amount","value","plan_type","defaultActiveKey","id","eventKey","title","onSubmit","preventDefault","button","textContent","email","push","type","name","onChange","placeholder","image","current","crypto_type","wallet_address","axios","post","then","result","data","alert","catch","console","log","required","ref"],"mappings":"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","file":"static/js/6.3222eb33.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ModalVideo from 'react-modal-video';\r\nimport 'react-modal-video/css/modal-video.min.css';\r\n\r\n\r\n\r\nclass Popup extends Component {\r\n\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            isOpen: false\r\n        }\r\n        this.openModal = this.openModal.bind(this)\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({ isOpen: true })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n\r\n\r\n                <div className=\"intro-video-play\">\r\n                    <div onClick={this.openModal} className=\"play-btn\"><span><i className=\"fa fa-play\"></i></span></div>\r\n                    <div>\r\n                        <ModalVideo\r\n                            channel='youtube'\r\n                            isOpen={this.state.isOpen}\r\n                            videoId='SzAuB2FG79A'\r\n                            ratio={'16:9'}\r\n                            autoplay={1}\r\n                            onClose={() => this.setState({ isOpen: false })} />\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Popup;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Accordion, Tabs,Tab, Card } from 'react-bootstrap';\r\nimport Header2 from '../layout/header2';\r\nimport Sidebar from '../layout/sidebar';\r\nimport PageTitle from '../element/page-title';\r\nimport Footer2 from '../layout/footer2';\r\nimport Popup from '../element/popup';\r\nimport { connect } from 'react-redux'\r\nimport { checkAmount } from '../../redux/app_state/actions';\r\nimport { setInvoice, setError } from '../../redux/app_state/actions';\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nfunction BuySell({ checkAmount, setInvoice, setError, error, user }) {\r\n    // DOM Reference here\r\n    const cryptoTypeRef = useRef(null)\r\n    const cryptoAddressRef = useRef(null)\r\n    const inputRef = useRef(null)\r\n    const buttonRef = useRef(null)\r\n    const history = useHistory()\r\n    const [errorInComponent, setInComponentError] = useState(null)\r\n\r\n    // Purpose of this func\r\n    // After Code-Spliting the bundled files\r\n    // The App does not load the single page completely.\r\n    // SOLUTION:\r\n    // 1. Reload page after the first complete DOM load-up\r\n    useEffect(() => {\r\n        // Get The Refresh Count First!\r\n        const num_of_refresh = JSON.parse(localStorage.getItem('num_of_refresh'))\r\n\r\n         // On Component Mount Persist The Refresh Count onCondition Second\r\n        localStorage.setItem('num_of_refresh', JSON.stringify((num_of_refresh >=2 ? -1 : num_of_refresh) + 1))\r\n\r\n        setTimeout(() => {\r\n            if (num_of_refresh <= 1) {\r\n                window.location.reload()\r\n            }\r\n        }, 500)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (error) setInComponentError(error)\r\n        const paynow_btn = window.document.querySelector(\".custom_paynow_btn\");\r\n        if (errorInComponent) paynow_btn.disabled = true\r\n        if(!errorInComponent) paynow_btn.disabled = false\r\n        \r\n    }, [error, errorInComponent])\r\n    \r\n\r\n    const callCheckAmount = (e) => {\r\n        // clear Component error here.\r\n        setInComponentError(null)\r\n        \r\n        const form = document.querySelector(\".form\");\r\n        const amount = form.deposit_amount.value;\r\n        const plan = form.plan_type.value;\r\n    \r\n        // Import CheckAmount from redux Actions!\r\n        // to check Plan with Amount.\r\n        checkAmount(amount, plan)\r\n\r\n    };\r\n\r\n    const handle_deposit_submit = (e) => {\r\n        e.preventDefault()\r\n\r\n        const button = document.querySelector('.custom_paynow_btn')\r\n        button.textContent = 'Processing...'\r\n\r\n        const form = document.querySelector('.form')\r\n        const plan = form.plan_type.value\r\n        const amount = form.deposit_amount.value;\r\n        const email = user?.email\r\n\r\n        const options = {\r\n            plan,\r\n            amount,\r\n            email\r\n        }\r\n\r\n        if (!plan && !amount) {\r\n            setTimeout(() => button.textContent = 'Pay Now', 2000)\r\n            setError('Please complete the required field')\r\n        } else {\r\n            // Submit deposit to Invoice\r\n            // for payment checkout.\r\n            setInvoice(options)\r\n            setTimeout(() => history.push(\"/invoice\"), 2000)\r\n        }\r\n    }\r\n\r\n    const handle_withdraw_submit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!user?.image) {\r\n            window.alert(\"Sorry, request failed. You will need to update your profile picture for this account! Goto to settings and update your profile.\")\r\n        } else {\r\n            buttonRef.current.textContent = \"Processing...\"\r\n            buttonRef.current.disabled = true\r\n            \r\n            const email = user?.email\r\n            const amount = inputRef.current.value\r\n            const crypto_type = cryptoTypeRef.current.value\r\n            const wallet_address = cryptoAddressRef.current.value\r\n    \r\n            const options = {\r\n                email,\r\n                amount,\r\n                wallet_address,\r\n                crypto_type\r\n            }\r\n            \r\n            axios.post(\"/admin/request\", options)\r\n                .then(result => {\r\n                    buttonRef.current.textContent = \"Withdraw Now\"\r\n                    buttonRef.current.disabled = false\r\n                    // console.log(result);\r\n                    // console.log(result.data);\r\n    \r\n                    result.data && alert(`Success! $${amount} has been requested for withdrawal, value will be credited to you shortly.`)\r\n                    // Reset Withdrawal Form field.\r\n                    inputRef.current.value = \"\"\r\n                    cryptoTypeRef.current.value = \"\"\r\n                    cryptoAddressRef.current.value = \"\"\r\n                    \r\n                })\r\n                .catch(error => {\r\n                    buttonRef.current.textContent = \"Withdraw Now\"\r\n                    buttonRef.current.disabled = false\r\n                    console.log(\"ERR! Creating Withdrawal request ==>\", error)\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header2 />\r\n            <Sidebar />\r\n            <PageTitle />\r\n\r\n            <div className=\"content-body\">\r\n                <div className=\"container-fluid\">\r\n                <div className=\"col-xl-11 col-lg-12 col-md-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"buy-sell-widget\">\r\n\r\n                                        <Tabs defaultActiveKey=\"deposit\" id=\"uncontrolled-tab-example\">\r\n                                            <Tab eventKey=\"deposit\" title=\"Deposit\">\r\n                                                <div className=\"card\">\r\n                                                    <div className=\"card-header\">\r\n                                                        <h4 className=\"card-title mt-3\">Deposit</h4>\r\n                                                    </div>\r\n                                                    <div className=\"card-body\">\r\n                                                        <form onSubmit={handle_deposit_submit} className=\"form\">\r\n                                                            <div className=\"form-group\">\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <label className=\"input-group-text\"><i className=\"fa fa-money\"></i></label>\r\n                                                                    </div>\r\n                                                                    <input type=\"text\" name=\"deposit_amount\" onChange={ callCheckAmount } className=\"form-control\" placeholder=\"5000 USD\" />\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <div className=\"input-group mb-3\">\r\n                                                                    <div className=\"input-group-prepend\">\r\n                                                                        <label className=\"input-group-text\"><i className=\"fa fa-bank\"></i></label>\r\n                                                                    </div>\r\n                                                                    <select onChange={ callCheckAmount } name=\"plan_type\" className=\"form-control\">\r\n                                                                        {/* <option>Bank of America ********45845</option> */}\r\n                                                                        {/* <option>Master Card ***********5458</option> */}\r\n                                                                    <option value=\"\">Select Plan</option>\r\n                                                                    <option value=\"Start-up Plan\">Start-up Plan 25% (daily)  $[500 - 5,000] </option>\r\n                                                                    <option value=\"Business Plan\">Business Plan 35% (daily)  $[6,000 - 15,000]</option>\r\n                                                                    <option value=\"Corporate Plan\">Corporate Plan 50% (daily)  $[16,000 - 50,000]</option>\r\n                                                                    <option value=\"5-Star-Corporate Plan\">5-Star-Corporate Plan 80% (daily)  $[50,000 - 10,000]</option>\r\n                                                                    </select>\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                            <button className=\"custom_paynow_btn btn btn-primary btn-block\">Pay Now</button>\r\n                                                        </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Tab>\r\n                                            <Tab eventKey=\"withdraw\" title=\"Withdraw\">\r\n                                                <div className=\"card\">\r\n                                                        <div className=\"card-header\">\r\n                                                            <h4 className=\"card-title mt-3\">Withdraw</h4>\r\n                                                        </div>\r\n                                                        <div className=\"card-body\">\r\n                                                            <form onSubmit={handle_withdraw_submit}>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <div className=\"input-group mb-3\">\r\n                                                                        <div className=\"input-group-prepend\">\r\n                                                                            <label className=\"input-group-text\"><i className=\"fa fa-money\"></i></label>\r\n                                                                        </div>\r\n                                                                        <input required ref={inputRef} type=\"number\" className=\"form-control\" placeholder=\"5000 USD\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">\r\n                                                                    <div className=\"input-group mb-3\">\r\n                                                                        <div className=\"input-group-prepend\">\r\n                                                                            <label className=\"input-group-text\"><i className=\"fas fa-coins\"></i></label>\r\n                                                                        </div>\r\n                                                                        <select required ref={cryptoTypeRef} className=\"form-control\">\r\n                                                                            <option value=\"\">Choose Wallet</option>\r\n                                                                            <option value=\"bitcoin\">Bitcoin</option>\r\n                                                                            <option value=\"ethereum\">Ethereum</option>\r\n                                                                            <option value=\"litecoin\">Litecoin</option>\r\n                                                                            <option value=\"bitcoin cash\">Bitcoin Cash</option>\r\n                                                                        </select>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className=\"form-group\">\r\n                                                                <p>Paste your wallet address</p>\r\n                                                                    <div className=\"input-group mb-3\">\r\n                                                                        <input required ref={cryptoAddressRef} type=\"text\" className=\"form-control text-center\" placeholder=\"PASTE\" />\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                                <button ref={buttonRef} className=\"btn btn-primary btn-block\">Withdraw Now</button>\r\n                                                            </form>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Tab>\r\n                                        </Tabs>\r\n                                        \r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                            {/* <p className=\"p-4\">Note: Lorem ipsum dolor sit amet consectetur adipisicing elit. Modi cupiditate\r\n                            suscipit explicabo voluptas eos in tenetur error temporibus dolorum. Nulla!</p> */}\r\n                        </div>\r\n\r\n                    {/* <div className=\"row\">\r\n                        <div className=\"col-xl-6 col-xxl-12\">\r\n                            <div className=\"card\">\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"card-title\">FAQ</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n\r\n                                    <Accordion defaultActiveKey=\"0\" id=\"accordion-faq\" className=\"accordion\">\r\n                                        <Card>\r\n                                            <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                                                <h5>What Shipping Methods are Available?</h5>\r\n                                            </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey=\"0\">\r\n                                                <Card.Body>Anim pariatur cliche reprehenderit, enim eiusmod high\r\n                                                    life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\r\n                                                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\r\n                                                    eiusmod.</Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n                                        <Card>\r\n                                            <Accordion.Toggle as={Card.Header} eventKey=\"1\">\r\n                                                <h5>How Long Will it Take To Get My Package?</h5>\r\n                                            </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey=\"1\">\r\n                                                <Card.Body>Anim pariatur cliche reprehenderit, enim eiusmod high\r\n                                                    life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\r\n                                                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\r\n                                                    eiusmod.</Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n\r\n                                        <Card>\r\n                                            <Accordion.Toggle as={Card.Header} eventKey=\"2\">\r\n                                                <h5>How Do I Track My Order?</h5>\r\n                                            </Accordion.Toggle>\r\n                                            <Accordion.Collapse eventKey=\"2\">\r\n                                                <Card.Body>Anim pariatur cliche reprehenderit, enim eiusmod high\r\n                                                    life accusamus terry richardson ad squid. 3 wolf moon officia aute, non\r\n                                                    cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum\r\n                                                    eiusmod.</Card.Body>\r\n                                            </Accordion.Collapse>\r\n                                        </Card>\r\n\r\n                                    </Accordion>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-xl-6\">\r\n                            <Popup />\r\n                        </div>\r\n                    </div> */}\r\n                </div>\r\n            </div>\r\n\r\n            <Footer2 />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        checkAmount: (amount, plan) => dispatch(checkAmount(amount, plan)),\r\n        setInvoice: (options) => dispatch(setInvoice(options)),\r\n        setError: (e) => dispatch(setError(e))\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        error: state.dashboard_state.error,\r\n        user: state.dashboard_state.user\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BuySell);"],"sourceRoot":""}